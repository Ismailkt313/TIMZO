<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Addresses - Timzo</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link rel="icon" type="image/x-icon" href="/images/TIMZO.jpg" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
      .address-card {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 20px;
        position: relative;
      }
      a {
     text-decoration: none;
     }

      .btn-custom {
        background-color: #1a1a1a;
        color: #ffffff;
        transition: all 0.2s;
      }
      .btn-custom:hover {
        background-color: #ffd700;
        color: #1a1a1a;
      }
      .modal-content {
        border-radius: 8px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
      }
      .sidebar {
        transform: translateX(-100%);
        transition: transform 0.3s ease-in-out;
      }
      .sidebar-open {
        transform: translateX(0);
      }
      @media (min-width: 768px) {
        .sidebar {
          transform: translateX(0);
        }
        .sidebar-toggle {
          display: none;
        }
        .main-content {
          margin-left: 256px;
        }
      }
    </style>
  </head>
  <body class="bg-gray-100 font-sans">
    <div class="flex min-h-screen">
      <!-- Sidebar -->
      <div
        class="sidebar w-64 bg-gray-900 text-white fixed top-0 left-0 h-full shadow-xl flex flex-col z-50"
      >
        <div class="p-6 text-xl font-semibold border-b border-gray-700 text-center">
          <% if (user && user.fullname) { %>
            <%= user.fullname %>
          <% } else { %>
            Guest
          <% } %>
        </div>
        <div class="flex justify-center items-center py-5 border-b border-gray-700">
          <div
            class="w-16 h-16 bg-gray-600 rounded-full flex items-center justify-center text-2xl font-bold uppercase"
          >
            <% if (user && user.fullname) { %>
              <%= user.fullname.charAt(0) %>
            <% } else { %>
              ?
            <% } %>
          </div>
        </div>
        <nav class="flex-1 px-4 py-6 space-y-3 text-sm font-medium">
          <a
            href="/user/account"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 <%= currentPage === 'profile' ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-800 hover:text-white' %>"
          >
            <i class="fas fa-user w-4 text-sm"></i> My Profile
          </a>
          <a
            href="/user/address"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 <%= currentPage === 'address' ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-800 hover:text-white' %>"
          >
            <i class="fas fa-map-marker-alt w-4 text-sm"></i> My Address
          </a>
          <a
            href="/user/orders"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 <%= currentPage === 'orders' ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-800 hover:text-white' %>"
          >
            <i class="fas fa-shopping-bag w-4 text-sm"></i> My Orders
          </a>
          <a
            href="/user/wallet"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 <%= currentPage === 'wallet' ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-800 hover:text-white' %>"
          >
            <i class="fas fa-wallet w-4 text-sm"></i> My Wallet
          </a>
          <a
            href="/user/newPassword"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 <%= currentPage === 'changepassword' ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-800 hover:text-white' %>"
          >
            <i class="fas fa-lock w-4 text-sm"></i> Change Password
          </a>
          <a
            href="/user/sidewishlist"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 <%= currentPage === 'Wishlist' ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-800 hover:text-white' %>"
          >
            <i class="fas fa-heart w-4 text-sm"></i> Wishlist
          </a>
          <a
            href="/user/coupons"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 <%= currentPage === 'coupons' ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-800 hover:text-white' %>"
          >
            <i class="fas fa-ticket-alt w-4 text-sm"></i> My Coupon
          </a>
          <a
            href="/user/referral"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 <%= currentPage === 'referral' ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-800 hover:text-white' %>"
          >
            <i class="fas fa-users w-4 text-sm"></i> Refer & Earn
          </a>
          <a
            href="/user/"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 text-gray-300 hover:bg-gray-800 hover:text-white"
          >
            <i class="fas fa-home w-4 text-sm"></i> Home
          </a>
          <a
            href="/logout"
            class="flex items-center gap-3 px-4 py-2 rounded-md transition-all duration-200 text-red-400 hover:bg-red-500 hover:text-white"
          >
            <i class="fas fa-sign-out-alt w-4 text-sm"></i> Log Out
          </a>
        </nav>
      </div>

      <!-- Main Content -->
      <div class="flex-1 main-content p-6">
        <button
          class="sidebar-toggle fixed top-4 left-4 md:hidden bg-gray-900 text-white p-2 rounded"
        >
          <i class="fas fa-bars"></i>
        </button>
        <div class="max-w-3xl mx-auto">
          <h1 class="text-2xl font-bold text-gray-800 mb-6 text-center">
            My Addresses
          </h1>
          <div class="text-center mb-6">
            <button
              class="btn-custom px-4 py-2 rounded font-semibold"
              data-bs-toggle="modal"
              data-bs-target="#addAddressModal"
            >
              <i class="fas fa-plus"></i> Add New Address
            </button>
          </div>

          <% if (addresses.length === 0) { %>
          <div class="text-center">
            <p class="text-gray-600">
              No addresses found. Add a new address to get started.
            </p>
          </div>
          <% } else { %>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <% addresses.forEach(address => { %>
            <div class="address-card">
              <% if (address.isDefault) { %>
              <span
                class="absolute top-2 right-2 bg-green-500 text-white text-xs px-2 py-1 rounded"
                >Default</span
              >
              <% } %>
              <p class="font-semibold text-gray-800"><%= address.fullName %></p>
              <p class="text-gray-600">
                <%= address.addressLine1 %><br />
                <% if (address.addressLine2) { %>
                <%= address.addressLine2 %><br />
                <% } %>
                <%= address.city %>, <%= address.state %>
                <%= address.postalCode %><br />
                <%= address.country %>
              </p>
              <p class="text-gray-600">Phone: <%= address.phone %></p>
              <div class="flex justify-between mt-4">
                <button
                  class="btn-custom px-3 py-1 rounded text-sm edit-address"
                  data-bs-toggle="modal"
                  data-bs-target="#editAddressModal"
                  data-address-id="<%= address._id %>"
                >
                  <i class="fas fa-edit"></i> Edit
                </button>
                <button
                  class="bg-red-500 text-white px-3 py-1 rounded text-sm delete-address"
                  data-address-id="<%= address._id %>"
                >
                  <i class="fas fa-trash"></i> Delete
                </button>
              </div>
            </div>
            <% }) %>
          </div>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Add Address Modal -->
    <div
      class="modal fade"
      id="addAddressModal"
      tabindex="-1"
      aria-labelledby="addAddressModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="addAddressForm" class="space-y-4">
              <div>
                <label for="fullName" class="form-label">Full Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="fullName"
                  name="fullName"
                  required
                />
              </div>
              <div>
                <label for="addressLine1" class="form-label">Address Line 1</label>
                <input
                  type="text"
                  class="form-control"
                  id="addressLine1"
                  name="addressLine1"
                  required
                />
              </div>
              <div>
                <label for="addressLine2" class="form-label">Address Line 2 (Optional)</label>
                <input
                  type="text"
                  class="form-control"
                  id="addressLine2"
                  name="addressLine2"
                />
              </div>
              <div>
                <label for="city" class="form-label">City</label>
                <input
                  type="text"
                  class="form-control"
                  id="city"
                  name="city"
                  required
                />
              </div>
              <div>
                <label for="state" class="form-label">State</label>
                <input
                  type="text"
                  class="form-control"
                  id="state"
                  name="state"
                  required
                />
              </div>
              <div>
                <label for="postalCode" class="form-label">Postal Code</label>
                <input
                  type="text"
                  class="form-control"
                  id="postalCode"
                  name="postalCode"
                  pattern="\d{6}"
                  required
                />
              </div>
              <div>
                <label for="country" class="form-label">Country</label>
                <input
                  type="text"
                  class="form-control"
                  id="country"
                  name="country"
                  required
                />
              </div>
              <div>
                <label for="phone" class="form-label">Phone</label>
                <input
                  type="tel"
                  class="form-control"
                  id="phone"
                  name="phone"
                  pattern="\d{10}"
                  required
                />
              </div>
              <div>
                <label for="addressType" class="form-label">Address Type</label>
                <select
                  class="form-control"
                  id="addressType"
                  name="addressType"
                  required
                >
                  <option value="Home">Home</option>
                  <option value="Work">Work</option>
                  <option value="Other">Other</option>
                </select>
              </div>
              <div>
                <label for="landmark" class="form-label">Landmark (Optional)</label>
                <input
                  type="text"
                  class="form-control"
                  id="landmark"
                  name="landmark"
                />
              </div>
              <div class="form-check">
                <input
                  type="checkbox"
                  class="form-check-input"
                  id="isDefault"
                  name="isDefault"
                  value="true"
                />
                <label class="form-check-label" for="isDefault">Set as Default Address</label>
              </div>
              <button type="submit" class="btn-custom w-full py-2 rounded">
                Save Address
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Edit Address Modal -->
    <div
      class="modal fade"
      id="editAddressModal"
      tabindex="-1"
      aria-labelledby="editAddressModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="editAddressForm" class="space-y-4">
              <input type="hidden" id="editAddressId" name="addressId" />
              <div>
                <label for="editFullName" class="form-label">Full Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="editFullName"
                  name="fullName"
                  required
                />
              </div>
              <div>
                <label for="editAddressLine1" class="form-label">Address Line 1</label>
                <input
                  type="text"
                  class="form-control"
                  id="editAddressLine1"
                  name="addressLine1"
                  required
                />
              </div>
              <div>
                <label for="editAddressLine2" class="form-label">Address Line 2 (Optional)</label>
                <input
                  type="text"
                  class="form-control"
                  id="editAddressLine2"
                  name="addressLine2"
                />
              </div>
              <div>
                <label for="editCity" class="form-label">City</label>
                <input
                  type="text"
                  class="form-control"
                  id="editCity"
                  name="city"
                  required
                />
              </div>
              <div>
                <label for="editState" class="form-label">State</label>
                <input
                  type="text"
                  class="form-control"
                  id="editState"
                  name="state"
                  required
                />
              </div>
              <div>
                <label for="editPostalCode" class="form-label">Postal Code</label>
                <input
                  type="text"
                  class="form-control"
                  id="editPostalCode"
                  name="postalCode"
                  pattern="\d{6}"
                  required
                />
              </div>
              <div>
                <label for="editCountry" class="form-label">Country</label>
                <input
                  type="text"
                  class="form-control"
                  id="editCountry"
                  name="country"
                  required
                />
              </div>
              <div>
                <label for="editPhone" class="form-label">Phone</label>
                <input
                  type="tel"
                  class="form-control"
                  id="editPhone"
                  name="phone"
                  pattern="\d{10}"
                  required
                />
              </div>
              <div>
                <label for="editAddressType" class="form-label">Address Type</label>
                <select
                  class="form-control"
                  id="editAddressType"
                  name="addressType"
                  required
                >
                  <option value="Home">Home</option>
                  <option value="Work">Work</option>
                  <option value="Other">Other</option>
                </select>
              </div>
              <div>
                <label for="editLandmark" class="form-label">Landmark (Optional)</label>
                <input
                  type="text"
                  class="form-control"
                  id="editLandmark"
                  name="landmark"
                />
              </div>
              <div class="form-check">
                <input
                  type="checkbox"
                  class="form-check-input"
                  id="editIsDefault"
                  name="isDefault"
                  value="true"
                />
                <label class="form-check-label" for="editIsDefault">Set as Default Address</label>
              </div>
              <button type="submit" class="btn-custom w-full py-2 rounded">
                Save Changes
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      function showToast(message, type = "success") {
        Swal.fire({
          toast: true,
          position: "bottom-end",
          icon: type,
          title: message,
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
        });
      }

      function validateAddress(data, isEdit = false) {
        const errors = [];

        if (!data.fullName || !/^[A-Za-z\s]{5,50}$/.test(data.fullName)) {
          errors.push(
            "Full Name must be at least 5 characters long and contain only letters and spaces"
          );
        }

        if (
          !data.addressLine1 ||
          !/^(?=.*[A-Za-z])[\w\s,.-]{3,100}$/.test(data.addressLine1)
        ) {
          errors.push(
            "Address Line 1 must be at least 3 characters, contain valid address characters, and include at least one letter"
          );
        }

        if (
          data.addressLine2 &&
          !/^(?=.*[A-Za-z])[\w\s,.-]{3,100}$/.test(data.addressLine2)
        ) {
          errors.push(
            "Address Line 2 must be at least 3 characters, contain valid address characters, and include at least one letter"
          );
        }

        if (!data.city || !/^[A-Za-z\s]{3,50}$/.test(data.city)) {
          errors.push(
            "City must be at least 3 characters and contain only letters and spaces"
          );
        }

        if (!data.state || !/^[A-Za-z\s]{3,50}$/.test(data.state)) {
          errors.push(
            "State must be at least 3 characters and contain only letters and spaces"
          );
        }

        if (!data.postalCode || !/^\d{6}$/.test(data.postalCode)) {
          errors.push("Postal Code must be exactly 6 digits");
        }

        if (!data.country || !/^[A-Za-z\s]{2,50}$/.test(data.country)) {
          errors.push(
            "Country must be 2-50 characters long and contain only letters and spaces"
          );
        }

        if (!data.phone || !/^\d{10}$/.test(data.phone)) {
          errors.push("Phone number must be exactly 10 digits");
        }

        if (
          !data.addressType ||
          !["Home", "Work", "Other"].includes(data.addressType)
        ) {
          errors.push("Address Type must be Home, Work, or Other");
        }

        if (data.landmark && !/^[\w\s,.-]{3,100}$/.test(data.landmark)) {
          errors.push(
            "Landmark must be at least 3 characters and contain valid address characters"
          );
        }

        if (isEdit && !data.addressId) {
          errors.push("Address ID is required for editing");
        }

        return errors;
      }

      document
        .getElementById("addAddressForm")
        ?.addEventListener("submit", async (e) => {
          e.preventDefault();
          const formData = new FormData(e.target);
          const data = Object.fromEntries(formData);
          console.log("Add address data:", data);

          const errors = validateAddress(data);
          if (errors.length > 0) {
            showToast(errors.join("\n"), "error");
            return;
          }

          try {
            const response = await fetch("/user/address", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(data),
              credentials: "include",
            });

            const result = await response.json();
            showToast(result.message, result.success ? "success" : "error");

            if (result.success) {
              setTimeout(() => window.location.reload(), 1500);
            }
          } catch (error) {
            console.error("Error adding address:", error);
            showToast("An error occurred while adding address", "error");
          }
        });

      document.querySelectorAll(".edit-address").forEach((button) => {
        button.addEventListener("click", async () => {
          const addressId = button.getAttribute("data-address-id");
          console.log("Fetching address:", addressId);
          try {
            const response = await fetch(`/user/address/${addressId}`, {
              method: "GET",
              headers: { "Content-Type": "application/json" },
              credentials: "include",
            });

            const address = await response.json();
            if (address) {
              document.getElementById("editAddressId").value = addressId;
              document.getElementById("editFullName").value = address.fullName;
              document.getElementById("editAddressLine1").value =
                address.addressLine1;
              document.getElementById("editAddressLine2").value =
                address.addressLine2 || "";
              document.getElementById("editCity").value = address.city;
              document.getElementById("editState").value = address.state;
              document.getElementById("editPostalCode").value =
                address.postalCode;
              document.getElementById("editCountry").value = address.country;
              document.getElementById("editPhone").value = address.phone;
              document.getElementById("editAddressType").value =
                address.addressType || "Home";
              document.getElementById("editLandmark").value =
                address.landmark || "";
              document.getElementById("editIsDefault").checked =
                address.isDefault;
            } else {
              showToast("Address not found", "error");
            }
          } catch (error) {
            console.error("Error fetching address:", error);
            showToast("An error occurred while fetching address", "error");
          }
        });
      });

      document
        .getElementById("editAddressForm")
        ?.addEventListener("submit", async (e) => {
          e.preventDefault();
          const formData = new FormData(e.target);
          const data = Object.fromEntries(formData);
          console.log("Edit address data:", data);

          const errors = validateAddress(data, true);
          if (errors.length > 0) {
            showToast(errors.join("\n"), "error");
            return;
          }

          const addressId = data.addressId;
          try {
            const response = await fetch(`/user/address/edit/${addressId}`, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(data),
              credentials: "include",
            });

            const result = await response.json();
            showToast(result.message, result.success ? "success" : "error");

            if (result.success) {
              setTimeout(() => window.location.reload(), 1500);
            }
          } catch (error) {
            console.error("Error editing address:", error);
            showToast("An error occurred while editing address", "error");
          }
        });

      document.querySelectorAll(".delete-address").forEach((button) => {
        button.addEventListener("click", async () => {
          const addressId = button.getAttribute("data-address-id");
          Swal.fire({
            title: "Are you sure?",
            text: "This address will be deleted permanently.",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Delete",
            cancelButtonText: "Cancel",
          }).then(async (result) => {
            if (result.isConfirmed) {
              try {
                const response = await fetch(
                  `/user/address/delete/${addressId}`,
                  {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    credentials: "include",
                  }
                );

                const data = await response.json();
                showToast(data.message, data.success ? "success" : "error");

                if (data.success) {
                  setTimeout(() => window.location.reload(), 1500);
                }
              } catch (error) {
                console.error("Error deleting address:", error);
                showToast("An error occurred while deleting address", "error");
              }
            }
          });
        });
      });

      // Sidebar toggle functionality
      document.querySelector(".sidebar-toggle")?.addEventListener("click", () => {
        document.querySelector(".sidebar").classList.toggle("sidebar-open");
      });
    </script>
  </body>
</html>