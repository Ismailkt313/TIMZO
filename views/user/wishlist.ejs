<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Timzo - My Wishlist</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/aos@2.3.1/dist/aos.css">
    <link rel="icon" type="image/x-icon" href="/images/TIMZO.jpg">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f9fafb;
            color: #1f2937;
            margin: 0;
        }
        .btn-custom {
            background-color: #ff8800;
            color: white;
            border: none;
            padding: 6px 16px;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        .btn-custom:hover {
            background-color: #e07000;
        }
        .btn-remove {
            background-color: #ef4444;
            color: white;
            border: none;
            padding: 6px 16px;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        .btn-remove:hover {
            background-color: #c53030;
        }
        a {
            text-decoration: none !important;
            color: inherit;
        }
        a:hover {
            color: #ffd700;
        }
        .product-card {
            position: relative;
            background: #fff;
            border-radius: 12px;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .product-card:hover {
            transform: scale(1.03);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        .product-card img {
            height: 200px;
            object-fit: cover;
            width: 100%;
        }
        .product-card .badge {
            position: absolute;
            top: 10px;
            left: 10px;
            font-size: 0.75rem;
            padding: 0.5rem;
        }
        .product-card .product-title,
        .product-card .product-price {
            color: #1f2937 !important;
        }
        .section-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 2rem;
            text-align: center;
            position: relative;
        }
        .section-title::after {
            content: '';
            width: 60px;
            height: 4px;
            background: #ffd700;
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
        }
        .empty-wishlist {
            text-align: center;
            padding: 3rem;
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        .empty-wishlist i {
            font-size: 3rem;
            color: #ef4444;
            margin-bottom: 1rem;
        }
        .btn-gold {
            background: linear-gradient(45deg, #ffd700, #facc15);
            color: #1f2937;
            padding: 0.75rem 2rem;
            border-radius: 9999px;
            font-weight: 600;
            transition: transform 0.3s ease, background 0.3s ease;
        }
        .btn-gold:hover {
            transform: scale(1.05);
            background: linear-gradient(45deg, #facc15, #ffd700);
        }
        /* Toast Styles */
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
        }
        .toast {
            display: flex;
            align-items: center;
            min-width: 250px;
            padding: 12px 16px;
            margin-bottom: 10px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            opacity: 0;
            transform: translateY(-20px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }
        .toast.show {
            opacity: 1;
            transform: translateY(0);
        }
        .toast.success {
            background-color: #10b981;
            color: white;
        }
        .toast.error {
            background-color: #ef4444;
            color: white;
        }
        .toast.warning {
            background-color: #f59e0b;
            color: white;
        }
        .toast .toast-icon {
            margin-right: 10px;
            font-size: 1.2rem;
        }
        .toast .toast-message {
            flex: 1;
            font-size: 0.9rem;
        }
        @media (max-width: 768px) {
            .product-card img {
                height: 150px;
            }
            .section-title {
                font-size: 2rem;
            }
            .empty-wishlist {
                padding: 2rem;
            }
            .empty-wishlist i {
                font-size: 2rem;
            }
            .toast-container {
                top: 10px;
                right: 10px;
                left: 10px;
            }
            .toast {
                min-width: 100%;
            }
        }
    </style>
</head>
<body>
    <!-- Toast Container -->
    <div class="toast-container" id="toastContainer"></div>

    <!-- Wishlist Section -->
    <section class="container my-5" data-aos="fade-up">
        <h2 class="section-title">My Wishlist</h2>
        <% if (wishlist && wishlist.length > 0) { %>
            <div class="row g-4">
                <% wishlist.forEach(item => { %>
                    <% const product = item.productId; %>
                    <% if (product) { %>
                        <div class="col-6 col-md-3" data-product-id="<%= product._id %>" data-aos="fade-up">
                            <div class="product-card">
                                <% if (product.createdAt && product.createdAt > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)) { %>
                                    <span class="badge bg-success">New</span>
                                <% } else if (product.regularPrice && product.salePrice < product.regularPrice) { %>
                                    <span class="badge bg-danger">Sale</span>
                                <% } %>
                                <a href="/products/<%= product._id %>" aria-label="View <%= product.name || 'Product' %>">
                                    <img src="<%= product.images && product.images[0] || '/images/placeholder.jpg' %>" class="card-img-top" alt="<%= product.name || 'Product' %>">
                                    <div class="card-body text-center">
                                        <h5 class="product-title"><%= product.name || 'Unnamed Product' %></h5>
                                        <p class="text-muted"><%= product.brand?.name || 'No Brand' %></p>
                                        <div class="rating">
                                            <% for(let i = 0; i < Math.floor(product.rating || 0); i++) { %>
                                                <i class="fas fa-star text-warning" aria-hidden="true"></i>
                                            <% } %>
                                            <% for(let i = Math.floor(product.rating || 0); i < 5; i++) { %>
                                                <i class="far fa-star text-muted" aria-hidden="true"></i>
                                            <% } %>
                                        </div>
                                        <p class="product-price fw-bold">$<%= product.salePrice?.toFixed(2) || '0.00' %></p>
                                    </div>
                                </a>
                                <div class="d-flex justify-content-center gap-2 px-2 pb-3">
                                    <button class="btn btn-custom btn-sm add-to-cart" data-product-id="<%= product._id %>">
                                        Add to Cart
                                    </button>
                                    <button class="btn btn-remove btn-sm remove-from-wishlist" data-product-id="<%= product._id %>">
                                        Remove
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% } %>
                <% }); %>
            </div>
        <% } else { %>
            <div class="empty-wishlist" data-aos="fade-up">
                <i class="fas fa-heart-broken"></i>
                <h3>Your Wishlist is Empty</h3>
                <p>Looks like you haven't added any items to your wishlist yet.</p>
                <a href="/products" class="btn btn-gold" aria-label="Shop Now">Start Shopping</a>
            </div>
        <% } %>
    </section>

    <%- include('.././Partials/user/footer') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script>
        // Initialize AOS
        AOS.init({ duration: 800, once: true });

        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', e => {
                e.preventDefault();
                const target = document.querySelector(anchor.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({ behavior: 'smooth' });
                }
            });
        });

        // Toast Notification Function
        function showToast({ type = 'success', message = '', duration = 3000 }) {
            const toastContainer = document.getElementById('toastContainer');
            
            // Create toast element
            const toast = document.createElement('div');
            toast.className = `toast ${type} show`;
            
            // Add icon based on type
            const icon = document.createElement('span');
            icon.className = 'toast-icon';
            if (type === 'success') {
                icon.innerHTML = '<i class="fas fa-check-circle"></i>';
            } else if (type === 'error') {
                icon.innerHTML = '<i class="fas fa-exclamation-circle"></i>';
            } else if (type === 'warning') {
                icon.innerHTML = '<i class="fas fa-exclamation-triangle"></i>';
            }
            toast.appendChild(icon);

            // Add message
            const messageSpan = document.createElement('span');
            messageSpan.className = 'toast-message';
            messageSpan.textContent = message;
            toast.appendChild(messageSpan);

            // Append toast to container
            toastContainer.appendChild(toast);

            // Remove toast after duration
            setTimeout(() => {
                toast.classList.remove('show');
                toast.style.opacity = '0';
                toast.style.transform = 'translateY(-20px)';
                setTimeout(() => toast.remove(), 300); // Wait for animation to finish
            }, duration);
        }

        // Add to cart
        document.querySelectorAll('.add-to-cart').forEach(button => {
            button.addEventListener('click', async (e) => {
                e.stopPropagation();
                const productId = button.getAttribute('data-product-id');
                const isLoggedIn = <%= user ? 'true' : 'false' %>;
                if (!isLoggedIn) {
                    showToast({
                        type: 'warning',
                        message: 'Please log in to add items to your cart. Redirecting...',
                        duration: 2000
                    });
                    setTimeout(() => {
                        window.location.href = '/login';
                    }, 2000);
                    return;
                }
                try {
                    const response = await fetch('/user/add-to-cart', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId, quantity: 1 })
                    });
                    const data = await response.json();
                    if (data.success) {
                        showToast({
                            type: 'success',
                            message: 'Product added to your cart!',
                            duration: 1500
                        });
                        const cartBadge = document.querySelector('.cart-count');
                        if (cartBadge) {
                            cartBadge.textContent = parseInt(cartBadge.textContent || 0) + 1;
                        }
                    } else {
                        showToast({
                            type: 'error',
                            message: data.message || 'Failed to add to cart',
                            duration: 3000
                        });
                    }
                } catch (error) {
                    showToast({
                        type: 'error',
                        message: 'An error occurred while adding to cart: ' + error.message,
                        duration: 3000
                    });
                }
            });
        });

        // Remove from wishlist
        document.querySelectorAll('.remove-from-wishlist').forEach(button => {
            button.addEventListener('click', async (e) => {
                e.stopPropagation();
                const productId = button.getAttribute('data-product-id');
                const isLoggedIn = <%= user ? 'true' : 'false' %>;
                if (!isLoggedIn) {
                    showToast({
                        type: 'warning',
                        message: 'Please log in to manage your wishlist. Redirecting...',
                        duration: 2000
                    });
                    setTimeout(() => {
                        window.location.href = '/login';
                    }, 2000);
                    return;
                }
                try {
                    const response = await fetch('/user/remove-from-wishlist', {
                        method: 'post',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId })
                    });
                    const data = await response.json();
                    if (data.success) {
                        showToast({
                            type: 'success',
                            message: 'Product removed from your wishlist!',
                            duration: 1500
                        });
                        // Remove the product card from the DOM
                        const productCard = document.querySelector(`[data-product-id="${productId}"]`);
                        if (productCard) {
                            productCard.remove();
                        }
                        // Check if wishlist is now empty
                        const remainingItems = document.querySelectorAll('.col-6').length;
                        if (remainingItems === 0) {
                            const wishlistSection = document.querySelector('.row.g-4');
                            wishlistSection.outerHTML = `
                                <div class="empty-wishlist" data-aos="fade-up">
                                    <i class="fas fa-heart-broken"></i>
                                    <h3>Your Wishlist is Empty</h3>
                                    <p>Looks like you haven't added any items to your wishlist yet.</p>
                                    <a href="/products" class="btn btn-gold" aria-label="Shop Now">Start Shopping</a>
                                </div>
                            `;
                        }
                    } else {
                        showToast({
                            type: 'error',
                            message: data.message || 'Failed to remove from wishlist',
                            duration: 3000
                        });
                    }
                } catch (error) {
                    showToast({
                        type: 'error',
                        message: 'An error occurred while removing from wishlist: ' + error.message,
                        duration: 3000
                    });
                }
            });
        });
    </script>
</body>
</html>