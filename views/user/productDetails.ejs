<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.name %> - TIMZO</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/landingPage.css">
    <link rel="icon" type="image/x-icon" href="/images/TIMZO.jpg">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .product-image {
            max-height: 400px;
            object-fit: contain;
            border-radius: 8px;
        }
        .thumbnail {
            cursor: pointer;
            border: 2px solid transparent;
            border-radius: 5px;
            transition: border-color 0.3s ease;
        }
        .thumbnail:hover, .thumbnail.active {
            border-color: #6f42c1;
        }
        .btn-gold {
            background-color: #ffd700;
            color: #000;
            border: none;
            transition: background-color 0.3s ease;
        }
        .btn-gold:hover {
            background-color: #e6c200;
        }
        .btn-wishlist {
            background-color: #f8f9fa;
            color: #6f42c1;
            border: 1px solid #6f42c1;
            transition: background-color 0.3s ease;
        }
        .btn-wishlist:hover {
            background-color: #6f42c1;
            color: #fff;
        }
        .rating i {
            font-size: 1.2rem;
        }
        .quantity-selector {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 15px;
        }
        .quantity-selector button {
            width: 40px;
            height: 40px;
            border: 1px solid #dee2e6;
            background-color: #f8f9fa;
            color: #333;
            font-size: 1.2rem;
            border-radius: 5px;
        }
        .quantity-selector input {
            width: 60px;
            text-align: center;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            padding: 5px;
        }
        .nav-tabs .nav-link {
            color: #6f42c1;
            border: none;
            border-bottom: 2px solid transparent;
        }
        .nav-tabs .nav-link.active {
            border-bottom: 2px solid #6f42c1;
            color: #333;
        }
        .specifications-table th {
            width: 30%;
            background-color: #f8f9fa;
        }
        .review-card {
            border-bottom: 1px solid #dee2e6;
            padding: 15px 0;
        }
        .review-card:last-child {
            border-bottom: none;
        }

        /* Responsive Adjustments */
        @media (max-width: 767px) {
            .product-image {
                max-height: 300px;
            }
            .thumbnail {
                width: 60px;
                height: 60px;
            }
            .quantity-selector {
                justify-content: center;
            }
            .btn-gold, .btn-wishlist {
                width: 100%;
                margin-bottom: 10px;
            }
            h1.display-5 {
                font-size: 1.5rem;
            }
            h3.fw-bold {
                font-size: 1.25rem;
            }
            .specifications-table th, .specifications-table td {
                font-size: 0.9rem;
            }
        }
    </style>
</head>
<body>
    <%- include('.././Partials/user/navbar', { user: user, cartCount: cartCount, search: '' }) %>

    <section class="container my-5">
        <div class="row">
            <div class="col-md-6">
                <div class="text-center">
                    <img src="<%= product.images[0] || '/images/placeholder.jpg' %>" class="img-fluid product-image" id="mainImage" alt="<%= product.name %>">
                </div>
                <div class="d-flex justify-content-center mt-3 gap-2 flex-wrap">
                    <% product.images.forEach((image, index) => { %>
                        <img src="<%= image || '/images/placeholder.jpg' %>" class="img-thumbnail thumbnail" style="width: 80px; height: 80px;" onclick="changeImage('<%= image %>', this)" alt="Thumbnail <%= index %>">
                    <% }) %>
                </div>
            </div>

            <div class="col-md-6">
                <h1 class="display-5 mb-2"><%= product.name %></h1>
                <p class="text-muted mb-2">by <%= product.brand.name %></p>
                <div class="rating mb-3">
                    <% for(let i = 0; i < Math.floor(product.rating); i++) { %>
                        <i class="fas fa-star text-warning"></i>
                    <% } %>
                    <% for(let i = Math.floor(product.rating); i < 5; i++) { %>
                        <i class="far fa-star text-muted"></i>
                    <% } %>
                    <span class="ms-2">(<%= product.rating %>)</span>
                </div>
                <h3 class="fw-bold mb-3">$<%= product.salePrice.toFixed(2) %> 
                    <% if (product.regularPrice > product.salePrice) { %>
                        <small class="text-muted text-decoration-line-through">$<%= product.regularPrice.toFixed(2) %></small>
                        <span class="text-success ms-2">
                            (<%= Math.round(((product.regularPrice - product.salePrice) / product.regularPrice) * 100) %>% off)
                        </span>
                    <% } %>
                </h3>
                <% if (product.stock > 0) { %>
                    <p class="text-success mb-3">In Stock: <%= product.stock %> units available</p>
                    <div class="quantity-selector">
                        <button type="button" onclick="updateQuantity(-1)">-</button>
                        <input type="number" id="quantity" value="1" min="1" max="<%= product.stock %>">
                        <button type="button" onclick="updateQuantity(1)">+</button>
                    </div>
                    <div class="d-flex gap-2">
                        <button class="btn btn-gold add-to-cart" data-product-id="<%= product._id %>">Add to Cart</button>
                        <button class="btn btn-wishlist add-to-wishlist" data-product-id="<%= product._id %>">
                            <i class="far fa-heart"></i> Add to Wishlist
                        </button>
                    </div>
                <% } else { %>
                    <p class="text-danger mb-3">Out of Stock</p>
                    <button class="btn btn-secondary" disabled>Out of Stock</button>
                <% } %>
            </div>
        </div>

        <!-- Product Details Tabs -->
        <div class="row mt-5">
            <div class="col-12">
                <ul class="nav nav-tabs mb-4" id="productTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button" role="tab" aria-controls="description" aria-selected="true">Description</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="specifications-tab" data-bs-toggle="tab" data-bs-target="#specifications" type="button" role="tab" aria-controls="specifications" aria-selected="false">Specifications</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab" aria-controls="reviews" aria-selected="false">Reviews</button>
                    </li>
                </ul>
                <div class="tab-content" id="productTabsContent">
                    <!-- Description Tab -->
                    <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
                        <h4>Description</h4>
                        <p><%= product.description || 'No description available.' %></p>
                    </div>

                    <!-- Specifications Tab -->
                    <div class="tab-pane fade" id="specifications" role="tabpanel" aria-labelledby="specifications-tab">
                        <h4>Specifications</h4>
                        <table class="table specifications-table">
                            <tbody>
                                <tr>
                                    <th>Category</th>
                                    <td><%= product.category ? product.category.name : 'N/A' %></td>
                                </tr>
                                <tr>
                                    <th>SKU</th>
                                    <td><%= product.sku || 'N/A' %></td>
                                </tr>
                                <tr>
                                    <th>Dimensions</th>
                                    <td><%= product.dimensions || 'N/A' %></td>
                                </tr>
                                <tr>
                                    <th>Material</th>
                                    <td><%= product.material || 'N/A' %></td>
                                </tr>
                                <tr>
                                    <th>Warranty</th>
                                    <td><%= product.warranty || 'N/A' %></td>
                                </tr>
                                <!-- Watch-specific specs (example) -->
                                <tr>
                                    <th>Movement Type</th>
                                    <td><%= product.movementType || 'N/A' %></td>
                                </tr>
                                <tr>
                                    <th>Water Resistance</th>
                                    <td><%= product.waterResistance || 'N/A' %></td>
                                </tr>
                                <tr>
                                    <th>Strap Material</th>
                                    <td><%= product.strapMaterial || 'N/A' %></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Reviews Tab -->
                    <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
                        <h4>Customer Reviews</h4>
                        <% if (product.reviews && product.reviews.length > 0) { %>
                            <% product.reviews.forEach(review => { %>
                                <div class="review-card">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <strong><%= review.user ? review.user.name : 'Anonymous' %></strong>
                                            <div class="rating">
                                                <% for(let i = 0; i < Math.floor(review.rating); i++) { %>
                                                    <i class="fas fa-star text-warning"></i>
                                                <% } %>
                                                <% for(let i = Math.floor(review.rating); i < 5; i++) { %>
                                                    <i class="far fa-star text-muted"></i>
                                                <% } %>
                                            </div>
                                        </div>
                                        <small class="text-muted"><%= new Date(review.createdAt).toLocaleDateString() %></small>
                                    </div>
                                    <p class="mt-2"><%= review.comment %></p>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <p>No reviews yet. Be the first to review this product!</p>
                            <% if (user) { %>
                                <a href="/user/review/<%= product._id %>" class="btn btn-outline-primary btn-sm">Write a Review</a>
                            <% } else { %>
                                <a href="/login" class="btn btn-outline-primary btn-sm">Log in to Write a Review</a>
                            <% } %>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <%- include('.././Partials/user/footer') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function changeImage(imageSrc, element) {
            document.getElementById('mainImage').src = imageSrc;
            document.querySelectorAll('.thumbnail').forEach(thumb => thumb.classList.remove('active'));
            element.classList.add('active');
        }

        function updateQuantity(change) {
            const quantityInput = document.getElementById('quantity');
            let quantity = parseInt(quantityInput.value);
            const max = parseInt(quantityInput.max);
            quantity = quantity + change;
            if (quantity < 1) quantity = 1;
            if (quantity > max) quantity = max;
            quantityInput.value = quantity;
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Add to Cart
            document.querySelectorAll('.add-to-cart').forEach(button => {
                button.addEventListener('click', async () => {
                    const productId = button.getAttribute('data-product-id');
                    const quantity = parseInt(document.getElementById('quantity').value);
                    const isLoggedIn = <%= user ? 'true' : 'false' %>;
                    if (!isLoggedIn) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Please Log In',
                            text: 'You need to be logged in to add items to your cart.',
                            showConfirmButton: true,
                            confirmButtonText: 'Log In'
                        }).then(result => {
                            if (result.isConfirmed) window.location.href = '/login';
                        });
                        return;
                    }

                    try {
                        const response = await fetch('/user/cart/add', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ productId, quantity })
                        });
                        const data = await response.json();
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Added to Cart',
                                text: 'Product added to your cart!',
                                timer: 1500
                            });
                            const cartBadge = document.querySelector('.cart-count');
                            if (cartBadge) {
                                cartBadge.textContent = parseInt(cartBadge.textContent) + quantity;
                            }
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message || 'Failed to add to cart'
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while adding to cart'
                        });
                    }
                });
            });

            // Add to Wishlist (Placeholder - assumes endpoint exists)
            document.querySelectorAll('.add-to-wishlist').forEach(button => {
                button.addEventListener('click', async () => {
                    const productId = button.getAttribute('data-product-id');
                    const isLoggedIn = <%= user ? 'true' : 'false' %>;
                    if (!isLoggedIn) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Please Log In',
                            text: 'You need to be logged in to add items to your wishlist.',
                            showConfirmButton: true,
                            confirmButtonText: 'Log In'
                        }).then(result => {
                            if (result.isConfirmed) window.location.href = '/login';
                        });
                        return;
                    }

                    try {
                        const response = await fetch('/user/wishlist/add', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ productId })
                        });
                        const data = await response.json();
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Added to Wishlist',
                                text: 'Product added to your wishlist!',
                                timer: 1500
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message || 'Failed to add to wishlist'
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while adding to wishlist'
                        });
                    }
                });
            });

            // Ensure quantity input doesn't exceed stock
            document.getElementById('quantity').addEventListener('input', function() {
                let quantity = parseInt(this.value);
                const max = parseInt(this.max);
                if (quantity < 1) this.value = 1;
                if (quantity > max) this.value = max;
            });
        });
    </script>
</body>
</html>