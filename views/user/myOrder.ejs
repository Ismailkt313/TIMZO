<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders - Timzo</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="icon" type="image/x-icon" href="/images/TIMZO.jpg">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Poppins:wght@600&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        h1, h2, h3 {
            font-family: 'Poppins', sans-serif;
        }
        .sidebar {
            background: linear-gradient(180deg, #1f2937 0%, #111827 100%);
            transition: transform 0.3s ease-in-out;
            z-index: 50;
        }
        .sidebar-hidden {
            transform: translateX(-100%);
        }
        .sidebar-active {
            transform: translateX(0);
        }
        .main-content {
            margin-left: 256px;
            padding: 2rem;
            background-color: #f9fafb;
        }
        .order-card {
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
            padding: 24px;
            transition: transform 0.2s ease-in-out;
        }
        .order-card:hover {
            transform: translateY(-4px);
        }
        .btn-primary {
            background-color: #1f2937;
            color: #ffffff;
            padding: 8px 16px;
            border-radius: 6px;
            transition: all 0.3s;
        }
        .btn-primary:hover {
            background-color: #facc15;
            color: #1f2937;
        }
        .btn-danger {
            background-color: #ef4444;
            color: #ffffff;
            padding: 8px 16px;
            border-radius: 6px;
            transition: all 0.3s;
        }
        .btn-danger:hover {
            background-color: #dc2626;
        }
        .status-badge {
            display: inline-flex;
            align-items: center;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 500;
        }
        .invoice{
            padding-left: 300px;
            padding-bottom: 10px;
        }
        .status-processing { background-color: #fef3c7; color: #d97706; }
        .status-delivered { background-color: #d1fae5; color: #059669; }
        .status-cancelled { background-color: #fee2e2; color: #dc2626; }
        .progress-bar {
            height: 6px;
            background-color: #e5e7eb;
            border-radius: 3px;
            overflow: hidden;
        }
        .progress-fill {
            height: 100%;
            background-color: #10b981;
            transition: width 0.5s ease-in-out;
        }
        .tooltip {
            position: relative;
        }
        .tooltip:hover::after {
            content: attr(data-tooltip);
            position: absolute;
            left: 100%;
            top: 50%;
            transform: translateY(-50%);
            background: #374151;
            color: #fff;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            white-space: nowrap;
            z-index: 10;
        }
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }
            .main-content {
                margin-left: 0;
                padding: 1rem;
            }
            .order-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="flex min-h-screen">
        <%- include('../Partials/user/userSidebar', { user: user, currentPage: 'orders' }) %>
        <div class="main-content flex-1 flex justify-center">
            <div class="w-full max-w-5xl">
                <h1 class="text-4xl font-bold text-gray-900 mb-10 text-center">My Orders</h1>
                <% if (orders.length === 0) { %>
                    <div class="text-center py-16 bg-white rounded-xl shadow-md">
                        <i class="fas fa-shopping-bag text-gray-400 text-5xl mb-4"></i>
                        <p class="text-gray-600 text-lg mb-6">No orders found.</p>
                        <a href="/products" class="btn-primary inline-block px-6 py-3 text-lg">Start Shopping</a>
                    </div>
                <% } else { %>
                    <div class="order-grid grid grid-cols-2 gap-8">
                        <% orders.forEach(order => { %>
                            <div class="order-card">
                                <div class="invoice">
                                    <button class="btn-custom btn-link text-sm" onclick="downloadInvoice('<%= order._id %>')">
                            <i class="fas fa-download"></i> Download Invoice
                        </button>
                                </div>
                                <div class="flex justify-between items-center mb-4">
                                    <p class="font-semibold text-xl text-gray-900">Order #<%= order.orderId %></p>
                                    <span class="status-badge status-<%= order.orderStatus.toLowerCase() %>">
                                        <i class="fas fa-circle text-xs mr-2"></i> <%= order.orderStatus %>
                                    </span>
                                </div>
                                <p class="text-gray-600 text-sm mb-2">
                                    <i class="fas fa-calendar-alt mr-2"></i> Placed on: <%= new Date(order.orderDate).toLocaleDateString() %>
                                </p>
                                <p class="text-gray-600 text-sm mb-4">
                                    <i class="fas fa-rupee-sign mr-2"></i> Total: ₹<%= order.totalAmount.toFixed(2) %>
                                </p>
                                <div class="progress-bar mb-6">
                                    <div class="progress-fill" style="width: <%= order.orderStatus === 'Delivered' ? '100%' : order.orderStatus === 'Processing' ? '50%' : '0%' %>"></div>
                                </div>
                                <div class="flex space-x-4">
                                    <a href="/orders/<%= order._id %>" class="btn-primary flex-1 text-center">View Details</a>
                                    <% if (order.orderStatus === 'Processing') { %>
                                        <button class="btn-danger flex-1 cancel-order" data-order-id="<%= order._id %>">Cancel Order</button>
                                    <% } %>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <footer class="bg-white p-6 text-center text-gray-600 text-sm shadow-inner mt-12">
        © <%= new Date().getFullYear() %> Timzo. All rights reserved.
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('sidebar-active');
        }

        document.querySelectorAll('.cancel-order').forEach(button => {
            button.addEventListener('click', async () => {
                const orderId = button.getAttribute('data-order-id');
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This order will be cancelled.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Cancel Order',
                    cancelButtonText: 'Keep Order',
                    buttonsStyling: false,
                    customClass: {
                        confirmButton: 'btn-danger px-4 py-2 rounded mr-2',
                        cancelButton: 'btn-primary px-4 py-2 rounded'
                    }
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/user/orders/cancel/${orderId}`, {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                credentials: 'include'
                            });
                            const data = await response.json();
                            Swal.fire({
                                toast: true,
                                position: 'bottom-end',
                                icon: data.success ? 'success' : 'error',
                                title: data.message,
                                showConfirmButton: false,
                                timer: 3000
                            });
                            if (data.success) {
                                setTimeout(() => window.location.reload(), 1500);
                            }
                        } catch (error) {
                            console.error('Error cancelling order:', error);
                            Swal.fire('Error', 'Failed to cancel order', 'error');
                        }
                    }
                });
            });
        });
         async function downloadInvoice(orderId) {
            try {
                Swal.fire({
                    title: 'Generating Invoice...',
                    allowOutsideClick: false,
                    didOpen: () => Swal.showLoading()
                });

                const response = await fetch(`/user/orders/invoice/${orderId}`, {
                    method: 'GET',
                    credentials: 'include'
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const blob = await response.blob();
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `Invoice_${orderId}.pdf`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);

                Swal.close();
            } catch (error) {
                console.error('Error downloading invoice:', error);
                Swal.fire('Error', 'Failed to download invoice. Please try again.', 'error');
            }
        }
    </script>
</body>
</html>